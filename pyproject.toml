[tool.poetry]
name = "api-response-shaper"
version = "0.1.0"
description = "An essential package for structuring and optimizing your API responses."
authors = ["ARYAN-NIKNEZHAD <aryan513966@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
django = [
  { version = ">=4.2,<5.0", python = ">=3.8,<3.10" },
  { version = ">=4.2,<5.3", python = ">=3.10" },      # Django 4.2 and 5.x for Python 3.10+
]
djangorestframework = "^3.15.0"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-django = "^4.8.0"
pytest-cov = "^5.0.0"
pylint = "^3.2.6"
pylint-django = "^2.5.5"
mypy = "^1.11.1"
isort = "^5.13.2"
black = "^24.4.2"
commitizen = "^3.28.0"
pre-commit = "^3.5.0"
bandit = { extras = [ "toml" ], version = "^1.7.9" }
tox = "^4.16.0"
django-stubs = "^5.0.4"
sphinx = "^6.2.1"
sphinx-rtd-theme = "^2.0.0"
docformatter = "^1.7.5"
codecov = "^2.1.13"
python-semantic-release = "^9.8.8"


[tool.pytest.ini_options]
python_files = [ "tests.py", "test_*.py" ]
addopts = "--cov --cov-report=term-missing --cov-report=html --cov-fail-under=90"
markers = [
    "api_responses: Tests api responses",
    "decorators: Test decorators for api responses",
]

[tool.coverage.run]
source = [ "response_shaper" ]
omit = [
  "*/apps.py*",
  "*/tests/*",
  "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self\\.debug",
  "raise AssertionError",
  "if 0:",
  "if __name__ == .__main__.:",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
